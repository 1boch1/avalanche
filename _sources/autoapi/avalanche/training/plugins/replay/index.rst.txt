:mod:`avalanche.training.plugins.replay`
========================================

.. py:module:: avalanche.training.plugins.replay


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.training.plugins.replay.ReplayPlugin



.. py:class:: ReplayPlugin(mem_size=200)

   Bases: :class:`avalanche.training.plugins.strategy_plugin.StrategyPlugin`

   Experience replay plugin.

   Handles an external memory filled with randomly selected
   patterns and implements the "adapt_train_dataset" callback to add them to
   the training set.

   The :mem_size: attribute controls the number of patterns to be stored in
   the external memory. In multitask scenarios, mem_size is the memory size
   for each task. We assume the training set contains at least :mem_size: data
   points.

   .. method:: adapt_train_dataset(self, strategy, **kwargs)

      Expands the current training set with datapoint from
      the external memory before training.


   .. method:: after_training_exp(self, strategy, **kwargs)

      After training we update the external memory with the patterns of
      the current training batch/task. 




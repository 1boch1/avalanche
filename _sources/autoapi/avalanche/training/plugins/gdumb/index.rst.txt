:mod:`avalanche.training.plugins.gdumb`
=======================================

.. py:module:: avalanche.training.plugins.gdumb


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.training.plugins.gdumb.GDumbPlugin



.. py:class:: GDumbPlugin(mem_size=200)

   Bases: :class:`avalanche.training.plugins.strategy_plugin.StrategyPlugin`

   A GDumb plugin. At each experience the model
   is trained with all and only the data of the external memory.
   The memory is updated at the end of each experience to add new classes or
   new examples of already encountered classes.
   In multitask scenarios, mem_size is the memory size for each task.

   This plugin can be combined with a Naive strategy to obtain the
   standard GDumb strategy.

   https://www.robots.ox.ac.uk/~tvg/publications/2020/gdumb.pdf

   .. method:: adapt_train_dataset(self, strategy, **kwargs)

      Before training we make sure to organize the memory following
      GDumb approach and updating the dataset accordingly.




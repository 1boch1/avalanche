:mod:`avalanche.training.deprecated.ar1.utils`
==============================================

.. py:module:: avalanche.training.deprecated.ar1.utils

.. autoapi-nested-parse::

   General useful functions for machine learning with Pytorch.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.training.deprecated.ar1.utils.replace_bn_with_brn
   avalanche.training.deprecated.ar1.utils.change_brn_pars
   avalanche.training.deprecated.ar1.utils.consolidate_weights
   avalanche.training.deprecated.ar1.utils.set_consolidate_weights
   avalanche.training.deprecated.ar1.utils.reset_weights
   avalanche.training.deprecated.ar1.utils.examples_per_class
   avalanche.training.deprecated.ar1.utils.set_brn_to_train
   avalanche.training.deprecated.ar1.utils.set_brn_to_eval
   avalanche.training.deprecated.ar1.utils.freeze_up_to
   avalanche.training.deprecated.ar1.utils.create_syn_data
   avalanche.training.deprecated.ar1.utils.extract_weights
   avalanche.training.deprecated.ar1.utils.extract_grad
   avalanche.training.deprecated.ar1.utils.init_batch
   avalanche.training.deprecated.ar1.utils.pre_update
   avalanche.training.deprecated.ar1.utils.post_update
   avalanche.training.deprecated.ar1.utils.update_ewc_data
   avalanche.training.deprecated.ar1.utils.compute_ewc_loss


.. function:: replace_bn_with_brn(m, name='', momentum=0.1, r_d_max_inc_step=0.0001, r_max=1.0, d_max=0.0, max_r_max=3.0, max_d_max=5.0)


.. function:: change_brn_pars(m, name='', momentum=0.1, r_d_max_inc_step=0.0001, r_max=1.0, d_max=0.0)


.. function:: consolidate_weights(model, cur_clas)

   Mean-shift for the target layer weights


.. function:: set_consolidate_weights(model)

   set trained weights 


.. function:: reset_weights(model, cur_clas)

   reset weights


.. function:: examples_per_class(train_y)


.. function:: set_brn_to_train(m, name='')


.. function:: set_brn_to_eval(m, name='')


.. function:: freeze_up_to(model, freeze_below_layer)


.. function:: create_syn_data(model)


.. function:: extract_weights(model, target)


.. function:: extract_grad(model, target)


.. function:: init_batch(net, ewcData, synData)


.. function:: pre_update(net, synData)


.. function:: post_update(net, synData)


.. function:: update_ewc_data(net, ewcData, synData, clip_to, c=0.0015)


.. function:: compute_ewc_loss(model, ewcData, lambd=0, device=None)


.. data:: model
   

   


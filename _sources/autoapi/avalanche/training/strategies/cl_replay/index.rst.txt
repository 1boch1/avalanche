:mod:`avalanche.training.strategies.cl_replay`
==============================================

.. py:module:: avalanche.training.strategies.cl_replay


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.training.strategies.cl_replay.Replay



.. py:class:: Replay(model: Module, classifier_field: str, optimizer: Optimizer, criterion: Module, mem_size: int, reinit_model_before_step: bool = True, reinit_function: object = None, train_mb_size: int = 1, train_epochs: int = 1, test_mb_size: int = None, device=None, evaluation_protocol: Optional[EvalProtocol] = None, plugins: Optional[Sequence[StrategySkeleton]] = None)

   Bases: :class:`avalanche.training.strategies.Naive`

   The replay strategy is built on top of the Replay plugin and Naive strategy.
   It mix patterns from the current step with patterns from the previous steps
   in order to mitigate forgetting.

   Creates an instance of the Replay strategy.

   :param model: The model.
   :param classifier_field: The name of the classifier field. Used when
       managing heads in Multi-Task scenarios.
   :param optimizer: The optimizer to use.
   :param criterion: The loss criterion to use.
   :param mem_size: Replay memory size
   :param reinit_model_before_step: if True, model will be reinitialized 
       before each step according to `reinit_function` or uniformly if
       `reinit_function` is not provided. Default True.
   :param reinit_function: a function which takes as input the model 
       and return the model with weights initialized.
       Used only if `reinit_model_before_step` is True. Default None.        
   :param train_mb_size: The train minibatch size. Defaults to 1.
   :param train_epochs: The number of training epochs. Defaults to 1.
   :param test_mb_size: The test minibatch size. Defaults to 1.
   :param device: The device to use. Defaults to None (cpu).
   :param evaluation_protocol: The evaluation protocol. Defaults to None.
   :param plugins: Plugins to be added 
       (Replay plugin will be added by default). Defaults to None.

   .. method:: before_training(self)

      Reinitialize model before each step, if needed.


   .. method:: _init_weights(self)

      Default init function




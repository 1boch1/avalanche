:mod:`avalanche.logging.tensorboard_logger`
===========================================

.. py:module:: avalanche.logging.tensorboard_logger

.. autoapi-nested-parse::

   This module handles all the functionalities related to the logging of
   Avalanche experiments. 



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.logging.tensorboard_logger.TensorboardLogger



.. py:class:: TensorboardLogger(tb_log_dir='./tb_data', filename_suffix='')

   Bases: :class:`avalanche.logging.StrategyLogger`

   The `TensorboardLogger` provides an easy integration with
   Tensorboard logging. Each monitored metric is automatically
   logged to Tensorboard.
   The user can inspect results in real time by appropriately launching
   tensorboard with `tensorboard --logdir=/path/to/tb_log_exp_name`.

   If no parameters are provided, the default folder in which tensorboard
   log files are placed is "./runs/".
   .. note::
       We rely on PyTorch implementation of Tensorboard. If you
       don't have Tensorflow installed in your environment,
       tensorboard will tell you that it is running with reduced
       feature set. This should not impact on the logger performance.

   Creates an instance of the `TensorboardLogger`.

   :param tb_log_dir: path to the directory where tensorboard log file
       will be stored. Default to "./tb_data".
   :param filename_suffix: string suffix to append at the end of
       tensorboard log file. Default ''.

   .. method:: log_metric(self, metric_value: MetricValue, callback: str)

      This abstract method will has to be implemented by child classes.
      This method will be invoked on each callback.
      The `callback` parameter describes the callback from which the metric
      value is coming from.

      :param metric_value: The value to be logged.
      :param callback: The name of the callback (event) from which the
          metric value was obtained.
      :return: None




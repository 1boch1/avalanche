:mod:`avalanche.constants`
==========================

.. py:module:: avalanche.constants

.. autoapi-nested-parse::

   Useful constants for the Avalanche package 



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.constants.Scenario
   avalanche.constants.Strategy
   avalanche.constants.DataBackEnd
   avalanche.constants.DLBackEnd
   avalanche.constants.HWBackEnd
   avalanche.constants.Phase
   avalanche.constants.Dataset
   avalanche.constants.Net
   avalanche.constants.EvalProtocol



.. py:class:: Scenario

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: NI
      :annotation: = ni

      

   .. attribute:: NC
      :annotation: = nc

      

   .. attribute:: NIC
      :annotation: = nic

      

   .. attribute:: NIC8
      :annotation: = nic8

      

   .. attribute:: NC25
      :annotation: = nc25

      


.. py:class:: Strategy

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: LWF
      :annotation: = lwf

      

   .. attribute:: NAIVE
      :annotation: = naive

      

   .. attribute:: FROM_SCRATCH
      :annotation: = from_scratch

      

   .. attribute:: REHEARSAL
      :annotation: = rehearsal

      

   .. attribute:: CWR
      :annotation: = cwr

      

   .. attribute:: CW
      :annotation: = cw

      

   .. attribute:: CWRP
      :annotation: = cwr+

      

   .. attribute:: FREEZE_FC8
      :annotation: = freeze_fc8

      

   .. attribute:: SST_A_D
      :annotation: = sst_a_d

      

   .. attribute:: EWC
      :annotation: = ewc

      

   .. attribute:: SYN
      :annotation: = syn

      

   .. attribute:: CCWR
      :annotation: = ccwr

      


.. py:class:: DataBackEnd

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: LMDB
      :annotation: = lmdb

      

   .. attribute:: IMAGE_DATA
      :annotation: = image_data

      

   .. attribute:: MEMORY_DATA
      :annotation: = memory_data

      


.. py:class:: DLBackEnd

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: CAFFE
      :annotation: = caffe

      

   .. attribute:: PYTORCH
      :annotation: = pytorch

      

   .. attribute:: TENSORFLOW
      :annotation: = tensorflow

      


.. py:class:: HWBackEnd

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: GPU
      :annotation: = gpu

      

   .. attribute:: CPU
      :annotation: = cpu

      


.. py:class:: Phase

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: TRAIN
      :annotation: = 1

      

   .. attribute:: TEST
      :annotation: = 2

      


.. py:class:: Dataset

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: FAKE_DATASET
      :annotation: = fake_dataset

      

   .. attribute:: CORE50
      :annotation: = core50

      

   .. attribute:: CMNIST
      :annotation: = cmnist

      

   .. attribute:: MNIST_SPLIT
      :annotation: = mnist_split

      

   .. attribute:: MNIST_PERM
      :annotation: = mnist_perm

      

   .. attribute:: MNIST_ROT
      :annotation: = mnist_rot

      

   .. attribute:: CIFAR_SPLIT
      :annotation: = cifar_split

      

   .. attribute:: CIFAR_SPLIT_FULL
      :annotation: = cifar_split_full

      

   .. attribute:: ICifar100
      :annotation: = icifar100

      

   .. attribute:: ICIFAR10
      :annotation: = icifar10

      

   .. attribute:: CFASHION_MNIST
      :annotation: = cfashionmnist

      


.. py:class:: Net

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: MID_CAFFENET
      :annotation: = mid_caffenet

      

   .. attribute:: CIFAR_SPLIT_NET
      :annotation: = cifar_split_net

      

   .. attribute:: NIN
      :annotation: = nin

      


.. py:class:: EvalProtocol

   Bases: :class:`enum.Enum`

   Generic enumeration.

   Derive from this class to define new enumerations.


   Create and return a new object.  See help(type) for accurate signature.

   .. attribute:: FIXED_TEST_SET
      :annotation: = fixed_test_set

      

   .. attribute:: GROWING_TEST_SET
      :annotation: = growing_test_set

      



:mod:`avalanche.evaluation.metric_utils`
========================================

.. py:module:: avalanche.evaluation.metric_utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.evaluation.metric_utils.default_cm_image_creator
   avalanche.evaluation.metric_utils.get_task_label
   avalanche.evaluation.metric_utils.filter_accepted_events
   avalanche.evaluation.metric_utils.bytes2human


.. function:: default_cm_image_creator(confusion_matrix_tensor: ndarray, display_labels=None, include_values=True, xticks_rotation='horizontal', values_format=None, cmap='viridis', dpi=100, image_title='')

   The default Confusion Matrix image creator. This utility uses Scikit-learn
   `ConfusionMatrixDisplay` to create the matplotlib figure. The figure
   is then converted to a PIL `Image`.

   For more info about the accepted graphic parameters, see:
   https://scikit-learn.org/stable/modules/generated/sklearn.metrics.plot_confusion_matrix.html#sklearn.metrics.plot_confusion_matrix.

   :param confusion_matrix_tensor: The tensor describing the confusion matrix.
       This can be easily obtained through Scikit-learn `confusion_matrix`
       utility.
   :param display_labels: Target names used for plotting. By default, `labels`
       will be used if it is defined, otherwise the values will be inferred by
       the matrix tensor.
   :param include_values: Includes values in confusion matrix. Defaults to
       `True`.
   :param xticks_rotation: Rotation of xtick labels. Valid values are
       'vertical', 'horizontal' or a float point value. Defaults to
       'horizontal'.
   :param values_format: Format specification for values in confusion matrix.
       Defaults to `None`, which means that the format specification is
       'd' or '.2g', whichever is shorter.
   :param cmap: Must be a str or a Colormap recognized by matplotlib.
       Defaults to 'viridis'.
   :param dpi: The dpi to use to save the image.
   :param image_title: The title of the image. Defaults to an empty string.
   :return: The Confusion Matrix as a PIL Image.


.. function:: get_task_label(eval_data: Union[EvalData, EvalTestData]) -> int

   Returns the current task label for a evaluation data object.

   The current task label depends on the phase. During the training
   phase, the task label is the one defined in the "training_task_label"
   field. On the contrary, during the test phase the task label is the one
   defined in the "test_task_label" field.

   :param eval_data: The evaluation data to get the task label from.
   :return: The current train or test task label.


.. function:: filter_accepted_events(event_types: Union[Type[EvalData], Sequence[Type[EvalData]]], train: bool, test: bool) -> List[Type[EvalData]]

   A simple utility method used to filter the types of evaluation events.

   :param event_types: A list of event types.
   :param train: If True, train events will be kept.
   :param test: If True, test events will be kept.
   :return: The event types as filtered according to the "train" and "test"
       parameters.


.. function:: bytes2human(n)



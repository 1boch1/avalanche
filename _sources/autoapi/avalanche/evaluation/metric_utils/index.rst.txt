:mod:`avalanche.evaluation.metric_utils`
========================================

.. py:module:: avalanche.evaluation.metric_utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.evaluation.metric_utils.default_cm_image_creator
   avalanche.evaluation.metric_utils.get_task_label
   avalanche.evaluation.metric_utils.stream_type
   avalanche.evaluation.metric_utils.phase_and_task
   avalanche.evaluation.metric_utils.bytes2human


.. function:: default_cm_image_creator(confusion_matrix_tensor: Tensor, display_labels=None, include_values=True, xticks_rotation='horizontal', values_format=None, cmap='viridis', dpi=100, image_title='')

   The default Confusion Matrix image creator. This utility uses Scikit-learn
   `ConfusionMatrixDisplay` to create the matplotlib figure. The figure
   is then converted to a PIL `Image`.

   For more info about the accepted graphic parameters,
   see `Scikit learn <https://scikit-learn.org/stable/modules/generated/sklearn.metrics.plot_confusion_matrix.html>`_ # noqa

   :param confusion_matrix_tensor: The tensor describing the confusion matrix.
       This can be easily obtained through Scikit-learn `confusion_matrix`
       utility.
   :param display_labels: Target names used for plotting. By default, `labels`
       will be used if it is defined, otherwise the values will be inferred by
       the matrix tensor.
   :param include_values: Includes values in confusion matrix. Defaults to
       `True`.
   :param xticks_rotation: Rotation of xtick labels. Valid values are
       'vertical', 'horizontal' or a float point value. Defaults to
       'horizontal'.
   :param values_format: Format specification for values in confusion matrix.
       Defaults to `None`, which means that the format specification is
       'd' or '.2g', whichever is shorter.
   :param cmap: Must be a str or a Colormap recognized by matplotlib.
       Defaults to 'viridis'.
   :param dpi: The dpi to use to save the image.
   :param image_title: The title of the image. Defaults to an empty string.
   :return: The Confusion Matrix as a PIL Image.


.. function:: get_task_label(strategy: PluggableStrategy) -> int

   Returns the current task label.

   The current task label depends on the phase. During the training
   phase, the task label is the one defined in the "train_task_label"
   field. On the contrary, during the eval phase the task label is the one
   defined in the "eval_task_label" field.

   :param strategy: The strategy instance to get the task label from.
   :return: The current train or eval task label.


.. function:: stream_type(experience: Experience) -> str

   Returns the stream name from which the experience belongs to.
   e.g. the experience can be part of train or test stream.

   :param experience: the instance of the experience


.. function:: phase_and_task(strategy: PluggableStrategy) -> Tuple[str, int]

   Returns the current phase name and the associated task label.

   The current task label depends on the phase. During the training
   phase, the task label is the one defined in the "train_task_label"
   field. On the contrary, during the eval phase the task label is the one
   defined in the "eval_task_label" field.

   :param strategy: The strategy instance to get the task label from.
   :return: The current phase name as either "Train" or "Task" and the
       associated task label.


.. function:: bytes2human(n)



:mod:`avalanche.benchmarks.datasets.tiny_imagenet.tiny_imagenet`
================================================================

.. py:module:: avalanche.benchmarks.datasets.tiny_imagenet.tiny_imagenet

.. autoapi-nested-parse::

   Tiny-Imagenet Pytorch Dataset 



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   avalanche.benchmarks.datasets.tiny_imagenet.tiny_imagenet.TinyImagenet



.. data:: filename
   :annotation: = ['tiny-imagenet-200.zip', 'http://cs231n.stanford.edu/tiny-imagenet-200.zip']

   

.. py:class:: TinyImagenet(data_folder='data', train=True, transform=ToTensor(), target_transform=None, download=True)

   Bases: :class:`torch.utils.data.Dataset`

   Tiny Imagenet Pytorch Dataset

   Args:
       :param string data_folder: folder in which to download dataset
       :param boolean train: True for train set, False for test set
       :param fun transform: Pytorch transformation founction for x
       :param fun target_transform: Pytorch transformation founction for y
       :param bool download: True for downloading the dataset

   .. method:: download_tinyImageNet(self)

      Downloads the TintImagenet Dataset 


   .. method:: labels2dict(self)

      Returns dictionaries to convert class names into progressive ids
      and viceversa.
      :returns: label2id, id2label: two Python dictionaries.


   .. method:: load_data(self, train=True)

      Load all images paths and targets.

      :param bool train: True for loading the training set, False for the
          test set.
      :return: train_set, test_set: (train_X_paths, train_y).


   .. method:: get_train_images_paths(self, class_name)

      Gets the training set image paths

      :param class_name: names of the classes of the images to be
          collected.
      :returns img_paths: list of strings (paths)


   .. method:: get_test_images_paths(self, class_name)

      Gets the test set image paths

      :param class_name: names of the classes of the images to be
          collected.
      :returns img_paths: list of strings (paths)


   .. method:: __len__(self)

      Returns the lenght of the set 


   .. method:: __getitem__(self, index)

      Returns the index-th x, y pattern of the set 



.. data:: train_data
   

   


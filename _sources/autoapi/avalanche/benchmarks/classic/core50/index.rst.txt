:mod:`avalanche.benchmarks.classic.core50`
==========================================

.. py:module:: avalanche.benchmarks.classic.core50

.. autoapi-nested-parse::

   This module contains the high-level CORe50 scenario generator. It
   basically returns a iterable scenario object ``GenericCLScenario`` given a
   number of configuration parameters.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   avalanche.benchmarks.classic.core50.CORe50


.. function:: CORe50(root=expanduser('~') + '/.avalanche/data/core50/', scenario='nicv2_391', run=0)

   CORe50 continual scenario generator

   :param root: Path indicating where to store the dataset and related
       metadata. By default they will be stored in
       avalanche/datasets/core50/data/.
   :param scenario: CORe50 main scanario. I can be chosen between 'ni', 'nc',
       'nic', 'nicv2_79', 'nicv2_196' or 'nicv2_391.'
   :param run: number of run for the scenario. Batch ordering change based
       on this parameter (a number between 0 and 9).

   :returns: it returns a :class:`GenericCLScenario` instance that can be
       iterated.


